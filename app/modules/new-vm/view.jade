.grid
  .panel.panel-default
    .col-sm-4
    p.page-title.col-sm-4
      i.xo-icon-vm
      |  Create VM 
      span(ng-if='isAdmin') on
        a(ng-if="'pool' === container.type", ui-sref="pools_view({id: container.id})")
          |  {{container.name_label}}
        a(ng-if="'host' === container.type", ui-sref="hosts_view({id: container.id})")
          |  {{container.name_label}}
    form.col-sm-4.form-horizontal(ng-if="resourceSet")
      .form-group(style="margin-top:4px;margin-bottom:4px;")
        label.col-sm-5.control-label Resource set:
        .col-sm-7(ng-if='resourceSets.length > 1')
          select.form-control(
            style="max-width:20em;"
            ng-model="$parent.resourceSet"
            ng-options="resourceSet.name for resourceSet in resourceSets | orderBy:natural('name') track by resourceSet.id"
            ng-change="updateResourceSet(resourceSet)"
            required=""
          )
        .col-sm-7.form-control-static(ng-if='resourceSets.length === 1')
          | {{ resourceSet.name }}
//- Add server panel
form.form-horizontal(ng-submit="createVMs()")
  .grid
    .panel.panel-default
      .panel-heading.panel-title
        i.fa.fa-info-circle
        |  VM info
      .panel-body
        .form-group
          label.col-sm-3.control-label Template
          .col-sm-9
            select.form-control(ng-model="template", ng-options="template.name_label for template in templates | map | orderBy:natural('name_label') track by template.id", required="", ng-change = 'initExistingValues(template)')
        .form-group
          label.col-sm-3.control-label Name
          .col-sm-9
            input.form-control(type="text", placeholder="Name of your new VM", ng-required="!multipleVmsActive", ng-model="name_label")
        .form-group
          label.col-sm-3.control-label Description
          .col-sm-9
            input.form-control(type="text", placeholder="Optional description of you new VM", ng-model="name_description")
    .panel.panel-default
      .panel-heading.panel-title
        i.fa.fa-dashboard
        |  Performances
      .panel-body
        .form-group
          label.col-sm-3.control-label vCPUs
          .col-sm-9
            input.form-control(type="text", placeholder="{{template.CPUs.number}}", ng-model="CPUs")
        .form-group
          label.col-sm-3.control-label CPU Weight
          .col-sm-9
            select.form-control(ng-model = "cpuWeight", ng-options='value as key for (key, value) in weightMap track by value' ng-disabled='resourceSet')
              option(value = '') default
        .form-group
          label.col-sm-3.control-label RAM
          .col-sm-9
            .input-group
              input.form-control(type='number' min="0" step="0.01" placeholder="{{ template.memory.size | bytesConvert:memoryUnit:'iB' }}" ng-model="memoryValue" ng-change="updateMemory()")
              span.input-group-btn.dropdown(dropdown)
                button.btn.btn-default.dropdown-toggle(type = 'button' dropdown-toggle)
                  | {{ memoryUnit }}&nbsp;
                  span.caret
                ul.dropdown-menu(role = 'menu' style='min-width:0')
                  li(ng-repeat="memoryUnit in units")
                    a(ng-click="updateMemoryUnit(memoryUnit)") {{ memoryUnit }}
  .grid
    //- Cloud Config Panel, only for templates with existing disks
    .panel.panel-default(ng-if="isDiskTemplate")
      .panel-heading.panel-title
        i.fa.fa-cloud
        |  Config Drive
        span.pull-right
          label(style = 'cursor: pointer;')
            input.hidden(type = 'checkbox', ng-model = '$parent.configDriveActive', ng-click = '$parent.configDriveMethod = "standard"')
            i.fa(ng-class = '{"fa-toggle-on": $parent.configDriveActive, "text-success": $parent.configDriveActive, "fa-toggle-off": !$parent.configDriveActive}', style = 'font-size: 1.5em;')
      .panel-body
        fieldset(ng-disabled = '!$parent.configDriveActive')  
          .form-group
            label.col-sm-3.control-label SSH Key
            .col-sm-9
              .input-group
                span.input-group-addon
                  input(
                    type = 'radio'
                    name = 'configDriveMethod'
                    ng-model = '$parent.configDriveMethod'
                    value = 'standard'
                  )
                input.form-control(
                  type="text"
                  placeholder="ssh-rsa AAAA.... you@machine"
                  ng-model="$parent.cloudConfigSshKey"
                  ng-disabled = '$parent.configDriveMethod !== "standard"'
                  name="cloudConfigSshKey"
                  required
                )
          .form-group
            label.col-sm-3.control-label
              a(href='http://cloudinit.readthedocs.org/en/latest/topics/examples.html', target='_blank') Custom config
            .col-sm-9
              .input-group
                span.input-group-addon
                  input(
                    type = 'radio'
                    name = 'configDriveMethod'
                    ng-model = '$parent.configDriveMethod'
                    value = 'custom'
                  )
                textarea.form-control(
                  rows='4'
                  style="resize: none;"
                  ng-model="$parent.cloudConfigCustom"
                  ng-disabled = '$parent.configDriveMethod !== "custom"'
                  name="cloudConfigCustom"
                  required
                )
              br
              button.btn.btn-default(
                type = 'button'
                ng-disabled = '$parent.configDriveMethod !== "custom"'
                ngf-select = '$parent.uploadCloudConfig($files[0]); fileName = $files[0].name'
              ) Select file
              span(style='max-width: 1em' ng-init='fileName = "None"')
                |  Selected file : {{ fileName }} 
                i.fa.fa-spinner.fa-spin(ng-show = 'cloudConfigLoading')
                i.fa.fa-exclamation-triangle.text-danger(ng-show = 'cloudConfigError' tooltip = 'Error while loading file')
    //- Install panel, only if an installation method is needed
    .panel.panel-default(ng-if="!isDiskTemplate")
      .panel-heading.panel-title
        i.fa.fa-download
        |  Install settings
      .panel-body
        .form-group(ng-show="availableMethods.cdrom")
          label.col-sm-3.control-label ISO/DVD
          .col-sm-9
            .input-group
              span.input-group-addon
                input(
                  type = 'radio'
                  name = 'installation_method'
                  ng-model = '$parent.installation_method'
                  value = 'cdrom'
                )
              select.form-control.disabled(
                ng-disabled="'cdrom' !== installation_method"
                ng-model="$parent.installation_cdrom"
              )
                option(value = '') Please select
                optgroup(ng-repeat="SR in ISO_SRs | orderBy:natural('name_label') track by SR.id", ng-if="SR.VDIs.length", label="{{SR.name_label}}")
                  option(ng-repeat="VDI in SR.VDIs | resolve | orderBy:natural('name_label') track by VDI.id", ng-value="VDI.id")
                    | {{VDI.name_label}}
        .form-group(
          ng-show = '(availableMethods.http || availableMethods.ftp || availableMethods.nfs)'
        )
          label.col-sm-3.control-label Network
          .col-sm-9
            .input-group
              span.input-group-addon
                input(
                  type = 'radio'
                  name = 'installation_method'
                  ng-model = '$parent.installation_method'
                  value = 'network'
                )
              input.form-control(type="text", ng-disabled="'network' !== installation_method", placeholder="e.g: http://ftp.debian.org/debian", ng-model="$parent.installation_network")
        .form-group(ng-show = 'template.virtualizationMode === "hvm"')
          label.col-sm-3.control-label PXE
          .col-sm-9
            input(
              type = 'radio'
              name = 'installation_method'
              ng-model = '$parent.installation_method'
              value = 'pxe'
            )
        .form-group(ng-show='template.virtualizationMode === "pv"')
          label.col-sm-3.control-label PV Args
          .col-sm-9
            input.form-control(type="text", placeholder="{{template.PV_args}}", ng-model="$parent.pv_args")

    //- Interface panel
    .panel.panel-default
      .panel-heading.panel-title
        i.xo-icon-network
        |  Interfaces
      .panel-body
        table.table.table-hover
          tr
            th MAC
            th Network
            th.col-md-1 &#160;
            //- Buttons
          tr(ng-repeat="VIF in VIFs track by VIF.id")
            td
              input.form-control(type="text", ng-model="VIF.mac", ng-pattern="/^\s*[0-9a-f]{2}(:[0-9a-f]{2}){5}\s*$/i", placeholder="Auto-generated if empty")
            td
              select.form-control(
                ng-options = 'network as (network.name_label + " (" +  (network.$pool | resolve).name_label + ")") for network in (networks || resourceSetNetworks) | map | orderBy:natural("name_label") track by network.id'
                ng-model = 'VIF.network'
                required
              )
                option(value = '') Please select
            td
              .pull-right
                button.btn.btn-default(type="button", ng-click="removeVIF($index)", title="Remove this interface")
                  i.fa.fa-times
        .btn-form
          p.center
            .btn-form
              p.center
                button.btn.btn-success(type="button", ng-click="addVIF()")
                  i.fa.fa-plus
                  |  Add interface
    //- end of misc and interface panel
  //- Cloud config panel
  .grid(ng-if = 'coreOsCloudConfig')
    .panel.panel-default
      .panel-heading.panel-title
        i.fa.fa-cloud
        |  Cloud config
        .pull-right.small
          button.btn.btn-default(type = 'button', ng-click = 'isExpanded = !isExpanded'): i.fa(ng-class = '{"fa-plus": !isExpanded, "fa-minus": isExpanded}')
      .panel-body
        textarea.form-control(rows="20", collapse= '!isExpanded', ng-model='$parent.coreOsCloudConfig', name='coreOsCloudConfig')
          | {{coreOsCloudConfig}}

  //- Multiple VMs panel
  .grid
    .panel.panel-default
      .panel-heading.panel-title
        i.fa.fa-clone
        |  Multiple VMs
        span.pull-right
          label(style = 'cursor: pointer;')
            input.hidden(type = 'checkbox', ng-model = 'multipleVmsActive', ng-click='refreshNames(); checkNumberOfVms()', ng-change="toggleBootAfterCreate()")
            i.fa(ng-class = '{"fa-toggle-on": multipleVmsActive, "text-success": multipleVmsActive, "fa-toggle-off": !multipleVmsActive}', style = 'font-size: 1.5em;')
      .panel-body(ng-if="multipleVmsActive")
        .form-group
          label.col-md-offset-4.col-sm-2.control-label
            i.fa.fa-refresh(ng-click = "$parent.refreshNames()" tooltip="Set VMs to default names")
            |  Number of VMs
          .col-sm-2
            .input-group(style="width:10em")
              input.form-control(type="number" ng-model="$parent.newNumberOfVms")
              span.input-group-btn
                button.btn.btn-default(type="button" ng-click="checkNumberOfVms()")
                  i.fa.fa-arrow-right
        .col-sm-6(ng-repeat="offset in [0, 1]")
          .form-group(
            ng-repeat = "n in [].constructor($parent.numberOfVms).slice(0, ($parent.numberOfVms+1)/2) track by $index"
            ng-if = "2*$index+offset < $parent.numberOfVms"
          )
            label.col-sm-2.control-label VM \#{{ 2*$index+1+offset }}
            .col-sm-10
              input.form-control(
                type = "text"
                required
                placeholder = "Name of new VM \#{{ (2*$index+1+offset) }}"
                ng-model = "$parent.vmsNames[2*$index+offset]"
                ng-init = "$parent.vmsNames[2*$index+offset] = $parent.defaultName + (2*$index+1+offset)"
              )

  //- Disk panel
  .grid
    .panel.panel-default
      .panel-heading.panel-title
        i.xo-icon-disk
        |  Disks
      .panel-body
        table.table.table-hover
          tr
            th.col-md-2 SR
            th.col-md-1 Bootable?
            th.col-md-2 Size
            th.col-md-2 Name
            th.col-md-3 Description
            th.col-md-2 &#160;
            //- Buttons
          tr(ng-repeat="VBD in (templateVBDs | orderBy:'position') track by VBD.id", ng-if="isDiskTemplate")
            td
              select.form-control(ng-model="(VBD.VDI | resolve).$SR", ng-options="SR.id as (SR.name_label + ' on ' + (SR.$container | resolve).name_label + ' (' + (SR.size - SR.physical_usage  | bytesToSize) + ' free)') for SR in (writable_SRs | orderBy:natural('name_label'))", ng-change = 'saveChange(VBD.position, "$SR", (VBD.VDI | resolve).$SR); updateSrs()', required)
                option(value = '') Please select
            td.text-center
              i.fa.fa-check(ng-if = 'VBD.bootable')
            td(style = "overflow: visible")
              .input-group
                input.form-control(
                  type='number'
                  min="0"
                  step="0.01"
                  placeholder="Size of this virtual disk"
                  ng-model="existingDiskSizeValues[VBD.position]"
                  ng-readonly='!configDriveActive'
                  ng-change = 'updateVdiSize(VBD.position)'
                  required
                )
                span.input-group-btn.dropdown(dropdown)
                  button.btn.btn-default.dropdown-toggle(type = 'button' dropdown-toggle ng-disabled='!configDriveActive')
                    | {{ existingDiskSizeUnits[VBD.position] }}&nbsp
                    span.caret
                  ul.dropdown-menu(role="menu" style="min-width:0")
                    li(ng-repeat="unit in $parent.units")
                      a(ng-click="existingDiskSizeUnits[VBD.position] = unit; updateVdiSize(VBD.position)") {{ unit }}
            td
              input.form-control(type="text", placeholder="Name of this virtual disk", ng-model="(VBD.VDI | resolve).name_label", ng-change = 'saveChange(VBD.position, "name_label", (VBD.VDI | resolve).name_label)')
            td
              input.form-control(type="text", placeholder="Description of this virtual disk", ng-model="(VBD.VDI | resolve).name_description", ng-change = 'saveChange(VBD.position, "name_description", (VBD.VDI | resolve).name_description)')
            td
          tr(ng-repeat="VDI in VDIs track by VDI.id")
            td
              select.form-control(ng-model="VDI.SR", ng-options="SR.id as (SR.name_label + ' on ' + (SR.$container | resolve).name_label + ' (' + (SR.size - SR.physical_usage  | bytesToSize) + ' free)') for SR in (writable_SRs | orderBy:natural('name_label'))" ng-change="updateSrs()")
            td.text-center
              input(type="checkbox", ng-model="VDI.bootable")
            td(style = "overflow: visible")
              .input-group
                input.form-control(
                  type='number'
                  min="0"
                  step="0.01"
                  placeholder="Size of this virtual disk"
                  ng-model="VDI.sizeValue"
                  ng-change = 'updateTotalDiskBytes()'
                  required
                )
                span.input-group-btn.dropdown(dropdown)
                  button.btn.btn-default.dropdown-toggle(type = 'button' dropdown-toggle)
                    | {{ VDI.sizeUnit }}&nbsp
                    span.caret
                  ul.dropdown-menu(role="menu" style="min-width:0")
                    li(ng-repeat="unit in units")
                      a(ng-click="VDI.sizeUnit = unit; updateTotalDiskBytes()") {{ unit }}
            td
              input.form-control(type="text", placeholder="Name of this virtual disk", ng-model="VDI.name_label")
            td
              input.form-control(type="text", placeholder="Description of this virtual disk", ng-model="VDI.name_description")
            td
              .btn-group
                button.btn.btn-default(type="button", ng-click="moveVDI($index, -1)", ng-disabled="$first", title="Move this disk up")
                  i.fa.fa-chevron-up
                button.btn.btn-default(type="button", ng-click="moveVDI($index, 1)", ng-disabled="$last", title="Move this disk down")
                  i.fa.fa-chevron-down
              .pull-right
                button.btn.btn-default(type="button", ng-click="removeVDI($index)", title="Remove this disk")
                  i.fa.fa-times
        .btn-form
          p.center
            .btn-form
              p.center
                button.btn.btn-success(type="button", ng-click="addVDI()")
                  i.fa.fa-plus
                  |  Add disk
  //- Confirmation panel
  .grid
    .panel.panel-default
      .panel-heading.panel-title
        i.fa.fa-flag-checkered
        |  Summary
      .panel-body
        .grid
          .grid-cell
            p.center.big
              span(ng-if="!multipleVmsActive") {{name_label}}
              span(ng-if="multipleVmsActive") {{numberOfVms}} new VMs
              | &nbsp;
              span.small(ng-if="template.name_label") ({{template.name_label}})
        .grid
          .grid-cell
            //- p.stat-name vCPUs
            p.center.big(tooltip="vCPUs")
              | {{CPUs || template.CPUs.number || 0}}x&nbsp;
              i.xo-icon-cpu
          .grid-cell
            //- p.stat-name RAM
            p.center.big(tooltip="RAM")
              span(ng-if="memoryValue") {{memory | bytesToSize}}
              span(ng-if="!memoryValue") {{template.memory.size | bytesToSize}}
              | &nbsp;
              i.xo-icon-memory
          .grid-cell
            //- p.stat-name Disks
            p.center.big(tooltip="Disks")
              | {{(VDIs.length) || (templateVBDs.length) || 0}}x&nbsp;
              i.xo-icon-disk
          .grid-cell
            //- p.stat-name Interfaces
            p.center.big(tooltip="Network interfaces")
              | {{(VIFs.length) || (template.VIFs.length) || 0}}x&nbsp;
              i.xo-icon-network
        .grid(ng-if="template && resourceSet")
          .grid-cell
            .center-block(ng-if="resourceSet.limits.cpus" style="width:60%")
              .progress
                .progress-bar(
                  role="progressbar",
                  aria-valuemin="0",
                  aria-valuenow="{{resourceSet.limits.cpus.total - resourceSet.limits.cpus.available}}",
                  aria-valuemax="{{resourceSet.limits.cpus.total}}",
                  style="width: {{[resourceSet.limits.cpus.total - resourceSet.limits.cpus.available, resourceSet.limits.cpus.total] | percentage}}",
                  tooltip="{{resourceSet.limits.cpus.total - resourceSet.limits.cpus.available}} vCPUs already in use"
                )
                .progress-bar(
                  ng-class = '{"progress-bar-success": numberOfVms * (CPUs || template.CPUs.number || 0) <= resourceSet.limits.cpus.available, "progress-bar-danger": numberOfVms * (CPUs || template.CPUs.number || 0) > resourceSet.limits.cpus.available}'
                  role="progressbar",
                  aria-valuemin="0",
                  aria-valuenow="{{numberOfVms * (CPUs || template.CPUs.number || 0)}}",
                  aria-valuemax="{{resourceSet.limits.cpus.total}}",
                  style="width: {{[min(numberOfVms * (CPUs || template.CPUs.number || 0), resourceSet.limits.cpus.available), resourceSet.limits.cpus.total] | percentage}}",
                  tooltip="{{numberOfVms * (CPUs || template.CPUs.number || 0)}} vCPUs / {{resourceSet.limits.cpus.available}} remaining"
                )
          .grid-cell
            .center-block(ng-if="resourceSet.limits.memory" style="width:60%")
              .progress
                .progress-bar(
                  role="progressbar",
                  aria-valuemin="0",
                  aria-valuenow="{{resourceSet.limits.memory.total - resourceSet.limits.memory.available}}",
                  aria-valuemax="{{resourceSet.limits.memory.total}}",
                  style="width: {{[resourceSet.limits.memory.total - resourceSet.limits.memory.available, resourceSet.limits.memory.total] | percentage}}",
                  tooltip="{{resourceSet.limits.memory.total - resourceSet.limits.memory.available | bytesToSize}} already in use"
                )
                .progress-bar(
                  ng-class = '{"progress-bar-success": numberOfVms * memory <= resourceSet.limits.memory.available, "progress-bar-danger": numberOfVms * memory > resourceSet.limits.memory.available}'
                  role="progressbar",
                  aria-valuemin="0",
                  aria-valuenow="{{numberOfVms * memory}}",
                  aria-valuemax="{{resourceSet.limits.memory.total}}",
                  style="width: {{[min(numberOfVms * memory, resourceSet.limits.memory.available), resourceSet.limits.memory.total] | percentage}}",
                  tooltip="{{numberOfVms * memory | bytesToSize}} / {{resourceSet.limits.memory.available | bytesToSize}} remaining"
                )
          .grid-cell
            .center-block(ng-if="resourceSet.limits.disk" style="width:60%")
              .progress
                .progress-bar(
                  role="progressbar",
                  aria-valuemin="0",
                  aria-valuenow="{{resourceSet.limits.disk.total - resourceSet.limits.disk.available}}",
                  aria-valuemax="{{resourceSet.limits.disk.total}}",
                  style="width: {{[resourceSet.limits.disk.total - resourceSet.limits.disk.available, resourceSet.limits.disk.total] | percentage}}",
                  tooltip="{{resourceSet.limits.disk.total - resourceSet.limits.disk.available | bytesToSize}} already in use"
                )
                .progress-bar(
                  ng-class = '{"progress-bar-success": numberOfVms * totalDiskBytes <= resourceSet.limits.disk.available, "progress-bar-danger": numberOfVms * totalDiskBytes > resourceSet.limits.disk.available}'
                  role="progressbar",
                  aria-valuemin="0",
                  aria-valuenow="{{numberOfVms * totalDiskBytes}}",
                  aria-valuemax="{{resourceSet.limits.disk.total}}",
                  style="width: {{[min(numberOfVms * totalDiskBytes, resourceSet.limits.disk.available), resourceSet.limits.disk.total] | percentage}}",
                  tooltip="{{numberOfVms * totalDiskBytes | bytesToSize}} / {{resourceSet.limits.disk.available | bytesToSize}} remaining"
                )
          .grid-cell
        p.center(ng-if="isDiskTemplate")
          | Cloud configuration is&nbsp;
          strong.text-success(ng-if = 'configDriveActive') enabled.
          strong.text-danger(ng-if = '!configDriveActive') disabled.
        p.center(ng-if="selectedLocalSrs.size === 1")
          label
            | The VM will be created on {{(forcedHost | resolve).name_label}} since 
            span(ng-repeat="sr in selectedLocalSrs[forcedHost]") {{(sr | resolve).name_label}}
              span(ng-if="$index < selectedLocalSrs[forcedHost].length - 2") , 
              span(ng-if="$index === selectedLocalSrs[forcedHost].length - 2")  and 
            span(ng-if="selectedLocalSrs[forcedHost].length > 1")  are
            span(ng-if="selectedLocalSrs[forcedHost].length === 1")  is
            |  on {{(forcedHost | resolve).name_label}}
        p.text-danger(ng-if="selectedLocalSrs.size > 1")
          label.control-label Incompatible disks:
          ul(ng-if="selectedLocalSrs.size > 1")
            li.text-danger(ng-repeat="(host, srs) in selectedLocalSrs")
              span(ng-repeat="sr in srs") {{(sr | resolve).name_label}}
                span(ng-if="$index < srs.length - 2") , 
                span(ng-if="$index === srs.length - 2")  and 
              span(ng-if="srs.length > 1")  are
              span(ng-if="srs.length === 1")  is
              |  on {{(host | resolve).name_label}}
        p.center
          label
            input(type='checkbox', ng-model = 'bootAfterCreate')
            span(ng-if='!multipleVmsActive')  Boot VM after creation
            span(ng-if='multipleVmsActive')  Boot {{numberOfVms}} VMs after creation
        p.center
          button.btn.btn-lg.btn-primary(
            type="submit"
            ng-disabled = [
              'creatingVM',
              'resourceSet.limits.cpus && (CPUs || template.CPUs.number || 0) > resourceSet.limits.cpus.available',
              'resourceSet.limits.memory && memory > resourceSet.limits.memory.available',
              'resourceSet.limits.disk && totalDiskBytes > resourceSet.limits.disk.available',
              'selectedLocalSrs.size > 1'
            ].join(' || ')
          )
            i.fa.fa-play(ng-if = '!creatingVM')
            i.fa.fa-circle-o-notch.fa-spin(ng-if = 'creatingVM')
            |  Create VM
